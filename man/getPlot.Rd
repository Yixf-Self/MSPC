% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getPlot.R
\name{getPlot}
\alias{getPlot}
\title{Graphical view of different ERs set for each Chip-seq replicates.}
\usage{
getPlot(peakList_A, peakList_B, tau.s = 1e-08)
}
\arguments{
\item{peakList_A}{output of \link{filterBycombStringency},
is set of all confirmed ERs in \link[GenomicRanges]{GRanges} objects.}

\item{peakList_B}{output of \link{filterBycombStringency},
is set of all discarded ERs in \link[GenomicRanges]{GRanges} objects.}

\item{tau.s}{permissive threshold for stringent enriched regions,
all enriched regions below this threshold, are considered stringent ERs}
}
\value{
using \link[ggplot2]{ggplot} to generate stack bar plot for file bar
}
\description{
This function is served as graphical version of \link{export_ERs}.
To help user gaining deeper insight and biological evaluation of
analysis result, using \link[ggplot2]{ggplot} to generate
stack bar plot for each Chip-seq replicates can be done.
}
\examples{
require(GenomicRanges)
require(rtracklayer)
require(XVector)
require(ggplot2)

## prepare list of confirmedERs, discardedERs
confirmedERs <- GRangesList(
    cat = GRanges(
        seqnames=Rle("chr1", 3),ranges=IRanges(c(7,19,31), c(13,28,43)),
        strand = Rle(c("*"),3), rangeName=c("b3","b6","b7"),
        score=c(14,9,17)),
    bar = GRanges(
        seqnames=Rle("chr1", 3),ranges=IRanges(c(1,6,16), c(4,12,23)),
        strand = Rle(c("*"),3), rangeName=c("a1", "a2", "a3"),
         score=c(22,6,13))
)

discardedERs <- GRangesList(
    bar = GRanges(
        seqnames=Rle("chr1", 3),ranges=IRanges(c(6,25,40), c(12,33,49)),
        strand = Rle(c("*"),3), rangeName=c("a2","a5","a8"), score=c(3,2,4)),
    cat = GRanges(
        seqnames=Rle("chr1", 3),ranges=IRanges(c(15,19,47), c(18,28,55)),
        strand = Rle(c("*"),3), rangeName=c("b4","b6","b9"), score=c(1,3,6))
)

## add pvalue
confirmedERs <- lapply(confirmedERs, pvalueConversion)
discardedERs <- lapply(discardedERs, pvalueConversion)

## cast GRangesList to data.frame list
confirmedDF <- lapply(confirmedERs, as.data.frame)
discardedDF <- lapply(discardedERs, as.data.frame)

## visualize output
output <- getPlot(
  peakList_A=confirmedDF, peakList_B=discardedDF, tau.s=1.0E-08)

}
\author{
Julaiti Shayiding
}

